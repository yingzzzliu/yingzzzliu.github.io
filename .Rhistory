5.493000031,
5.681,
5.743,
5.824,
5.743,
5.715000153,
5.663,
5.697,
5.073,
5.279,
5.429999828,
5.524,
5.631,
5.791,
5.835,
5.97300005,
6.123,
6.182,
5.102,
5.123,
5.195000172,
5.41,
5.693,
6.611,
6.375,
6.375,
6.374,
6.374,
5.124,
5.528,
5.824999809,
5.945,
6.07,
5.716,
5.856,
5.962999821,
5.81,
5.648,
3.465,
3.515,
3.470999956,
3.408,
3.334,
6.411,
6.379,
6.343999863,
6.371,
6.375,
3.904,
4.219,
4.534999847,
4.631,
4.681,
5.123,
5.177,
5.394999981,
5.398,
5.603,
4.507,
4.635,
4.709000111,
4.571,
4.374,
6.798,
6.739,
6.572000027,
6.343,
6.262,
5.995,
6.078,
6.09800005,
6.173,
6.198,
5.848,
5.768,
5.757999897,
5.948,
6.118,
4.642,
4.459,
4.828999996,
4.724,
4.722,
5.984,
5.835,
5.837999821,
5.875,
5.895,
6.329,
6.361,
6.402999878,
6.31,
6.354,
4.271,
4.415,
4.440000057,
4.471,
4.366,
7.364,
7.291,
7.28399992,
7.314,
7.343,
7.587,
7.509,
7.493999958,
7.487,
7.48,
3.006,
3.069,
3.461999893,
3.462,
3.462,
6.298,
6.379,
6.441,
6.446,
6.421999931,
4.786,
4.996,
5.040999889,
5.199,
5.467,
3.781,
3.666,
3.348999977,
3.303,
3.231,
6.455,
6.474,
6.423999786,
6.072,
6.008,
2.839,
3.303,
3.494999886,
3.999,
4.085,
6.192,
6.192,
6.168,
6.168,
6.168000221,
4.739,
5.045,
4.804999828,
4.592,
4.461,
5.332,
5.389,
5.5,
5.483,
5.373,
5.548,
5.658,
5.822000027,
5.636,
5.247,
3.931,
3.739,
4.080999851,
4.161,
4.189,
4.681,
4.324,
4.096000195,
4.103,
4.332,
6.901,
6.573,
6.647999763,
6.774,
6.825,
6.867,
6.725,
6.714000225,
7.19,
7.054,
7.119,
7.104,
6.993000031,
6.886,
6.892,
6.485,
6.545,
6.453999996,
6.379,
6.293,
6.003,
5.987,
5.971000195,
6.096,
6.174,
6.81,
6.084,
5.25,
4.806,
4.707,
5.36,
5.061,
5.073999882,
5.103,
5.175,
4.077,
3.724,
3.592999935,
3.355,
3.38,
5.129,
4.795,
4.513999939,
4.377,
4.107,
4.61,
4.193,
3.875,
3.692,
3.663
)))
print(ggplot(happiness, aes(x = Year, y = Happiness_Score, group = Country, color = Country)) +
geom_line() +
ggtitle("Happiness Scores") +
xlab("Year") +
ylab("Happiness_Score") +
theme_minimal())
library(tidyverse)
library(ggplot2)
library(stringr)
library(maps)
install.packages("maps")
library(maps)
library(tidyverse)
library(ggplot2)
library(stringr)
library(maps)
?mapsRinteractive
install.packages("mapsRinteractive")
hapindex <- read.csv("./wdvpdata.csv", header=TRUE)
hapindex <- read.csv("dataset2019.csv", header=TRUE)
setwd("~/NM2207/backup/docs")
hapindex <- read.csv("dataset2019.csv"), header=TRUE)
hapindex <- read.csv("dataset2019.csv"), header=TRUE)
hapindex <- read.csv("dataset2019.csv"), header=TRUE
hapindex <- read.csv("dataset2019.csv")
hapindex <- hapindex %>%
select(region = indicator,
"hapscore" = `world.happiness.report.score`,
"countrycode" = `ISO.Country.code`) %>%
slice(-(1:4))
glimpse(hapindex)
world <- map_data("world")
glimpse(world)
difference <- setdiff(world$region, hapindex$region)
hapindex <- hapindex %>%
mutate(region = recode(str_trim(region),
"United States" = "USA",
"United Kingdom" = "UK",
"Korea (Rep.)" = "South Korea",
"Congo (Dem. Rep.)" = "Democratic Republic of the Congo",
"Congo (Rep.)" = "Republic of Congo",
"Korea (Dem. Peopleâ€™s Rep.)" = "North Korea"))
hapindex$hapscore <- as.numeric(hapindex$hapscore)
worldmap <- ggplot() +
geom_polygon(data=world, aes(x=long,
y=lat,
group=group)) +
coord_fixed(1.3)
worldmap
worldjoin <- inner_join(world, hapindex, by = "region")
worldjoin$hapscore <- as.numeric(worldjoin$hapscore)
glimpse(worldjoin)
cleanup <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
worldHappiness <- worldjoin %>%
ggplot(mapping = aes(
x=long,
y=lat,
group=group)) +
scale_fill_distiller(palette = "RdYlBu", direction = -1) +
coord_fixed(1.3) +
geom_polygon(aes(fill=hapscore)) +
ggtitle("World Happiness Report Scores 2017") +
cleanup
cleanup <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
worldHappiness <- worldjoin %>%
ggplot(mapping = aes(
x=long,
y=lat,
group=group)) +
scale_fill_distiller(palette = "RdYlBu", direction = -1) +
coord_fixed(1.3) +
geom_polygon(aes(fill=hapscore)) +
ggtitle("World Happiness Report Scores 2017") +
cleanup
cleanup <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)
)
worldHappiness <- worldjoin %>%
ggplot(mapping = aes(
x=long,
y=lat,
group=group)) +
scale_fill_distiller(palette = "RdYlBu", direction = -1) +
coord_fixed(1.3) +
geom_polygon(aes(fill=hapscore)) +
ggtitle("World Happiness Report Scores 2017") +
cleanup
packages = c('sf', 'tmap', 'tidyverse', 'plotly','viridis','hrbrthemes', 'ggthemes')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
install.packages(p)
install.packages(p)
install.packages(p)
install.packages(p)
install.packages(p)
install.packages("tmap")
install.packages("tmap")
packages = c('sf', 'tmap', 'tidyverse', 'plotly','viridis','hrbrthemes', 'ggthemes')
for (p in packages){
if(!require(p, character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
whr <- read.csv("2019data.csv")
countries <- st_read(dsn = "data/World_Countries",
layer = "World_Countries")
install.packages(c("ggplot2", "maps"))
library(ggplot2)
library(maps)
data <- data.frame(
country = c("Afghanistan", "Albania", "Algeria", "Argentina", "Armenia", "Australia", "Austria", "Azerbaijan", "Bahrain", "Bangladesh", "Belarus", "Belgium", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Bulgaria", "Burkina Faso", "Burundi", "Cambodia", "Cameroon", "Canada", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo (Brazzaville)", "Congo (Kinshasa)", "Costa Rica", "Croatia", "Cyprus", "Czech Republic", "Denmark", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Estonia", "Ethiopia", "Finland", "France", "Gabon", "Georgia", "Germany", "Ghana", "Greece", "Guatemala", "Guinea", "Haiti", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Ivory Coast", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kosovo", "Kuwait", "Kyrgyzstan", "Latvia", "Lebanon", "Liberia", "Libya", "Lithuania", "Luxembourg", "Madagascar", "Malawi", "Malaysia", "Mali", "Malta", "Mauritania", "Mauritius", "Mexico", "Moldova", "Mongolia", "Montenegro", "Morocco", "Myanmar", "Nepal", "Netherlands", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Norway", "Pakistan", "Palestinian Territories", "Panama", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Saudi Arabia", "Senegal", "Serbia", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "South Africa", "South Korea", "Spain", "Sri Lanka", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Togo", "Trinidad & Tobago", "Tunisia", "Turkey", "Turkmenistan", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "United States", "Uruguay", "Uzbekistan", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe"),
happiness_score = c(3.203,
4.719,
5.211,
6.086,
4.559,
7.228,
7.246,
5.208,
6.199,
4.456,
5.323,
6.923,
4.883,
5.082,
5.779,
5.386,
3.488,
6.3,
5.011,
4.587,
3.775,
4.7,
5.044,
7.278,
4.35,
6.444,
5.191,
6.125,
4.812,
4.418,
7.167,
5.432,
6.046,
6.852,
7.6,
5.425,
6.028,
4.166,
6.253,
5.893,
4.286,
7.769,
6.592,
4.799,
4.519,
6.985,
4.996,
5.287,
6.436,
4.534,
3.597,
5.86,
5.43,
5.758,
7.494,
4.015,
5.192,
4.548,
4.437,
7.021,
7.139,
6.223,
4.944,
5.89,
5.886,
4.906,
5.809,
4.509,
6.1,
6.021,
5.261,
5.94,
5.197,
3.975,
5.525,
6.149,
7.09,
3.933,
3.41,
5.339,
4.39,
6.726,
4.49,
5.888,
6.595,
5.529,
5.285,
5.523,
5.208,
4.36,
4.913,
7.488,
7.307,
6.105,
4.628,
5.265,
7.554,
5.653,
4.696,
6.321,
5.743,
5.697,
5.631,
6.182,
5.693,
6.374,
6.07,
5.648,
3.334,
6.375,
4.681,
5.603,
4.374,
6.262,
6.198,
6.118,
4.722,
5.895,
6.354,
4.366,
7.343,
7.48,
3.462,
6.446,
5.467,
3.231,
6.008,
4.085,
6.192,
4.461,
5.373,
5.247,
4.189,
4.332,
6.825,
7.054,
6.892,
6.293,
6.174,
4.707,
5.175,
3.38,
4.107,
3.663,
)
)
install.packages(c("ggplot2", "maps"))
install.packages(c("ggplot2", "maps"))
install.packages(c("askpass", "bslib", "curl", "dbplyr", "dplyr", "evaluate", "fansi", "ggplot2", "gtable", "httpuv", "knitr", "labeling", "lifecycle", "lubridate", "magick", "markdown", "openssl", "prettyunits", "ragg", "rematch", "rlang", "rmarkdown", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun"))
install.packages(c("askpass", "bslib", "curl", "dbplyr", "dplyr", "evaluate", "fansi", "ggplot2", "gtable", "httpuv", "knitr", "labeling", "lifecycle", "lubridate", "magick", "markdown", "openssl", "prettyunits", "ragg", "rematch", "rlang", "rmarkdown", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun"))
install.packages(c("askpass", "bslib", "curl", "dbplyr", "dplyr", "evaluate", "fansi", "ggplot2", "gtable", "httpuv", "knitr", "labeling", "lifecycle", "lubridate", "magick", "markdown", "openssl", "prettyunits", "ragg", "rematch", "rlang", "rmarkdown", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun"))
install.packages(c("askpass", "bslib", "curl", "dbplyr", "dplyr", "evaluate", "fansi", "ggplot2", "gtable", "httpuv", "knitr", "labeling", "lifecycle", "lubridate", "magick", "markdown", "openssl", "prettyunits", "ragg", "rematch", "rlang", "rmarkdown", "shiny", "stringi", "stringr", "systemfonts", "textshaping", "tinytex", "utf8", "vctrs", "vroom", "withr", "xfun"))
